@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@model IBallotModel
@{
  ViewBag.Title = "Ballots";
  ViewBag.Message = "Tally the votes";

  ContextItems.AddJavascriptForPage("ballotNormalPage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.peopleUrl={0};".FilledWith(@Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.invalidReasons={0};".FilledWith(Model.InvalidReasonsByGuidJsonString()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.BallotInfo={0};".FilledWith(Model.CurrentBallotInfo().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.Ballots={0};".FilledWith(Model.CurrentBallotsInfoList().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.BallotStatus={0};".FilledWith(BallotStatusEnum.Listing.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.Location={0};".FilledWith(ContextItems.LocationModel.CurrentBallotLocationJsonString()));
  ContextItems.AddJavascriptForPage("ballotNormalPage.HasLocations={0};".FilledWith(ContextItems.LocationModel.HasLocations.SerializedAsJsonString()));

  TemplateLoader.RequireTemplates(TemplateLoader.File.NormalVoteLine);

}
<script src="@ClientFile("~/Scripts/PeopleHelper.js")" type="text/javascript"></script>
<div class="PullInstructions">
  <ol>
    <li>Each paper ballot needs to be recorded here.</li>
    <li>The Ballot is automatically saved as Votes are added to it.</li>
    <li>Duplicate names will be noticed and marked.</li>
    @if (ContextItems.LocationModel.HasLocations)
    {
      <li>Be sure to update the Location Status to indicate the status of
        your counting process, and the Contact Info in case the head teller needs to contact
        you. </li>
    }
  </ol>
</div>
<div class="float-left div1">
  <div id="tabs" class="tabs">
    <ul>
      @if (ContextItems.LocationModel.HasLocations)
      {
        <li><a href="#tabLocation">This Location</a> </li>
      }
      <li><a href="#tabBallots">Ballots<span id="collectedVsEnteredTitle"></span></a></li>
      <li><a href="#tabNameSearch">Add to Ballot</a></li>
    </ul>
    <div id="tabNameSearch">
      <div class="float-right">
        <span class="ui-icon ui-icon-info float-right" id="qTipMissing"></span>
        <button id="btnAddMissing" type="button" tabindex="2" accesskey="M" class="btn btn-mini btn-info">
          Add na<u>m</u>e not in list</button>
        <span class="ui-icon ui-icon-info float-right Clear" id="qTipSpoiled"></span>
        <button id="btnAddSpoiled" type="button" tabindex="3" accesskey="L" class="btn btn-mini btn-info spoiledBtn float-right">
          Add a spoi<u>l</u>ed line</button>
      </div>
      <div class="heading">
        Add votes to Ballot # <span class="ballotCode"></span>
      </div>
      <div class="float-left">
        <div>
          Search for a <u>p</u>erson:
        </div>
        <input id="txtSearch" accesskey="P" tabindex="1" autocomplete="off" class="input-medium">
        <div class="action">
          <span id="action"></span><span id="more"></span>
        </div>
      </div>
      <div class="actionHolder Clear">
        <div class="tip1">
          Use &uarr; &darr; keys to move in the list. Press Enter when found.
        </div>
      </div>
      <ul id="nameList" class="nameList">
      </ul>
      <div class="Clear5">
      </div>
    </div>
    <div id="tabBallots" class="locationInfo">
      @if (ContextItems.LocationModel.HasLocations)
      {
        <div class="heading">
          Ballots at Location: <span data-name="Name"></span>
        </div>
      }
      <div>
        Ballots to enter:
                <input id="txtNumCollected" type="number" min="0" data-name="BallotsCollected" class="txtNumCollected" />
      </div>
      <div>
        <button id="btnNewBallot2" class="NewBallotBtns btn btn-mini btn-success" accesskey="N">
          Start <u>N</u>ew Ballot</button>
        Ballots entered so far: <span id="lblNumEntered" class="lblNumEntered"></span>
      </div>
      <h5>Ballots</h5>
      <div id="ballotList" class="ballotList">
      </div>
      <button type="button" id="btnRefreshBallotList" class="btn btn-info">
        Refresh</button>
    </div>
    @if (ContextItems.LocationModel.HasLocations)
    {
      <div id="tabLocation" class="locationInfo">
        <div class="heading">
          Location Status
        </div>
        <div>
          <select id="ddlLocationStatus" data-name="TallyStatusCode" size="@LocationStatusEnum.Count">
            @LocationStatusEnum.ForHtmlSelect(UserSession.CurrentLocation.TallyStatus)
          </select>
        </div>
        <div class="heading">
          Contact Info:
        </div>
        <div>
          <input id="txtContact" class="txtContact" maxlength="250" data-name="ContactInfo" />
        </div>
      </div>
    }
  </div>
</div>
<div id="votesPanel" class="votesPanel">
  <div class="titleDiv">
    <div class="float-right">
      <span class="ballotStatus"></span>Ballot #<span class="ballotCode"></span>
    </div>
    <span class="VoteNum">#</span> Names on the ballot
  </div>
  <div id="votesList">
  </div>
  <button type="button" id="btnNewBallot" class="NewBallotBtns btn btn-mini btn-success"
    accesskey="N" tabindex="2">
    Start <u>N</u>ew Ballot</button>
  <button type="button" id="btnDeleteBallot" disabled class="btn btn-mini" title="Delete after all votes have been deleted">
    Delete this empty ballot</button>
  <div class="review">
    <label for="cbReview">
      If this ballot needs review by the head teller, tick here</label><input type="checkbox" id="cbReview" />
  </div>
</div>
<div id="addMissingPanel" class="votesPanel">
  <h3>Adding Name Not in List
        <button id="btnCancelAddMissing" type="button" class="btn btn-mini btn-warning">
          Cancel</button></h3>
  @{ Html.RenderPartial("~/Views/Setup/EditPerson.cshtml", new SetupModel()); }
</div>
