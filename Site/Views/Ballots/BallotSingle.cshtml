@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@using TallyJ.EF
@model IBallotModel
@{
  ViewBag.Title = "Ballots";
  ViewBag.Message = "Tally the votes for a single position";

  ContextItems.AddJavascriptForPage("ballotPage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.frontDeskUrl={0};".FilledWith(Url.Action("Index", "Before").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.peopleUrl={0};".FilledWith(@Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.invalidReasons={0};".FilledWith(IneligibleReasonEnum.InvalidReasonsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.BallotInfo={0};".FilledWith(Model.CurrentBallotInfo().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.Ballots={0};".FilledWith(Model.CurrentBallotsInfoList().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.Location={0};".FilledWith(ContextItems.LocationModel.CurrentBallotLocationJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.HasLocations={0};".FilledWith(ContextItems.LocationModel.HasLocations.SerializedAsJsonString()));
}
<script src="@ClientFile("~/Scripts/PeopleHelper.js")" type="text/javascript"></script>
<div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
<div class="PullInstructions">
  <ol>
    <li>
      In this election, each paper ballot consists of a single name. Sort ballot slips
      into piles, one per person receiving a vote, including piles for spoiled votes.
    </li>
    <li>
      For each pile, select the person's name below then enter the number of votes they
      received.
    </li>
    @if (ContextItems.LocationModel.HasLocations)
    {
      <li>
        Be sure to update the Location Status to indicate the status of
        your counting process, and the Contact Info in case the head teller needs to contact
        you.
      </li>
    }
  </ol>
</div>
<div data-comment="empty div"></div>
<div class="Panels">
  <div class="sidePanel">
    <div id="accordion">
      @if (ContextItems.LocationModel.HasLocations)
      {
        <h3>Location Status <span class="LocationStatus"></span></h3>
        <div class="locationInfo">
          <div>
            <select id="ddlLocationStatus" data-name="TallyStatusCode" size="@LocationStatusEnum.Count">
              @LocationStatusEnum.ForHtmlSelect(UserSession.CurrentLocation)
            </select>
          </div>
          <div class="heading">
            Contact Info:
          </div>
          <div>
            <input id="txtContact" class="txtContact" maxlength="250" data-name="ContactInfo" />
          </div>
        </div>
      }
      <h3>
        <span>Computers</span> @if (ContextItems.LocationModel.HasLocations)
        {
          <span class="where">
            <span>-</span> <span class="LocationName" data-name="Name"></span>
          </span>
        }
      </h3>
      <div id="tabBallots" class="locationInfo">
        <div class="float-right">
          <button type="button" id="btnRefreshBallotList" class="btn btn-mini" title="Refresh the list of Ballots">
            Refresh List
          </button>
        </div>
        <div class="ballotDiv1">
          Ballots to enter:
          <input id="txtNumCollected" type="number" min="0" data-name="BallotsCollected" class="txtNumCollected" />
        </div>
        <div>
          Ballots entered: <span id="lblNumEntered" class="lblNumEntered"></span>
        </div>
        <div id="ballotList" class="ballotList">
        </div>
      </div>
      <h3><span>Add another Person</span></h3>
      <div id="tabNameSearch">
        <div class="action float-right">
          <span id="action"></span><span id="more"></span>
        </div>
        <div class="heading">
          Add a person
        </div>
        <div>
          Search for a <u>p</u>erson:
          <span class="ui-icon ui-icon-info" id="qTipSearch"></span>
        </div>
        <div class="float-right">
          <span class="ui-icon ui-icon-info float-right Clear" id="qTipSpoiled"></span>
          <button id="btnAddSpoiled" type="button" tabindex="2" accesskey="A" class="btn btn-mini btn-warn spoiledBtn float-right">
            <u>A</u>dd new or spoiled
          </button>
        </div>
        <div class="float-left" id="searchInput">
          <span id="keyTimeShow"></span>
          <input id="txtSearch" accesskey="P" tabindex="1" autocomplete="off" class="input-medium">
        </div>
        <div class="actionHolder Clear">
          <div class="tip1">
            Use &uarr; &darr; keys to move in the list. Press Enter to add.
          </div>
        </div>
        <ul id="nameList" class="nameList"></ul>
        <div class="Clear5">
        </div>
      </div>
    </div>
  </div>
  <div id="votesPanel" class="votesPanel">
    <div class="titleDiv">
      <span># Votes<span class="ui-icon ui-icon-info" id="qTipNumVotes"></span></span>
      &nbsp; Name of person <span class="NotBold">(in any order)</span>
    </div>
    <div id="votesList">
    </div>
  </div>
  <div id="addMissingPanel" class="votesPanel">
    <h3>
      Adding Name Not in List
    </h3>
    <button id="btnCancelAddMissing" type="button" class="btn btn-warning">
      Cancel
    </button>
    @{ Html.RenderPartial("~/Views/Setup/EditPerson.cshtml", new SetupModel()); }
  </div>
</div>

<script type="text/x-template" id="SingleVoteLine">
  <div class="VoteHost{Fake} Changed{changed} Valid{invalid} Invalid{invalidType} {ExtraClass}" id="V{vid}" data-vote-id="{vid}" data-person-id="{pid}">
    <div class="Top">
      <input class="Vote" type="number" min="0" value='{count}' tabindex="2">
      <span class="Invalid">Spoiled: </span>
      <span class="Name">{^Display}</span>
      <select class="Invalid InvalidCustom" data-invalid="{invalid}" tabindex="1" size="1">
        {^InvalidReasons}
      </select>
      <span class="icons">
        <span class="ui-icon ui-icon-arrow-2-n-s" title="Change the vote order"></span>
        <span class="ui-icon ui-icon-trash" title="Delete this person's ballots from this teller computer"></span>
      </span>
    </div>
    <div class="Invalid InvalidPerson">{InvalidDescription}</div>
    <div class="ChangedMessage">
      This person's identifying information was changed since this vote was recorded. Please verify that this is still for the same person as recorded on the paper ballot!
      <button type="button" class="btnClearChangeError">Verified correct</button>
    </div>
  </div>
</script>