@using TallyJ.Code.Enumerations
@using TallyJ.Code.Session
@model VoterModel
@{
  Layout = "~/Views/Shared/_LayoutVoter.cshtml";

  ViewData["ExtraScripts"] = new[]
  {
    ClientFile("~/Scripts/vue{0}.js", ".min"),
    ClientFile("~/Scripts/BadiDateToday.v1.js"),
    ClientFile("~/Scripts/PeopleHelper.js"),
    "//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js",
    "//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.20.0/vuedraggable.umd.min.js"
  };

  ContextItems.AddJavascriptForPage("voterHome.voteMethods={0};".FilledWith(TallyJ.Code.Enumerations.VotingMethodEnum.MethodMap()));
  ContextItems.AddJavascriptForPage("voterHome.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("voterHome.peopleUrl={0};".FilledWith(Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("voterHome.invalidReasons={0};".FilledWith(IneligibleReasonEnum.InvalidReasonsJsonString()));

  var x = this.Context.GetOwinContext().Authentication;
}

<div id="voterPage1" v-if="activePage === 1">
  <p>
    Hello! Your email address from @UserSession.VoterAuthSource is <strong>@UserSession.VoterEmail</strong>.
  </p>

  <div v-if="loading">Looking for your email address in elections...</div>

  <p v-if="elections.length">Here are the elections where your email address is registered:</p>
  <p v-if="!elections.length && !loading">Your email address is not registered in any known elections.</p>

  <table class="electionList" v-if="!loading && elections.length">
    <thead>
      <tr>
        <th class="ename">Election</th>
        <th class="online">Election Status</th>
        <th class="pname">Your Name in the Election</th>
        <th class="vmethod">Your voting method</th>
        <th class="vtime">When your ballot was received</th>
      </tr>
    </thead>
    <tbody>
      <tr v-for="e in elections" v-bind:key="e.id" v-bind:class="e.classes">
        <td class="ename" v-text="e.name"></td>
        <td class="online center" v-html="e.Status_Display"></td>
        <td class="pname" v-text="e.person.name"></td>
        <td class="vmethod center">
          <div v-if="e.openNow">
            <div>
              <button v-on:click="manageBallot(e)">Prepare my Vote</button>
            </div>
          </div>
          <span v-if="!e.openNow">{{e.person.VotingMethod_Display}}</span>
        </td>
        <td class="vtime center" v-text="e.person.RegistrationTime_Display"></td>
      </tr>
    </tbody>
  </table>
</div>

<div id="voterPage2" v-if="activePage === 2">
  <h2>{{election.name}}</h2>
  <h3 class="electionStatus" :class="election.classes" v-html="election.Status_Display"></h3>
  <button v-on:click="closeBallot">Return</button>
  <div class="poolBuilder">
    <div>
      <h2>Fill Pool</h2>
      <div>
        Search:
        <input type="text" v-model="searchText" class="searchBox" />
        <button v-on:click="searchText = ''">Clear</button>
      </div>

      <ul id="nameList">
        <li v-for="p in nameList"
            v-bind:key="p.Id"
            :id="'P' + p.Id"
            v-html="p.HtmlName"
            v-on:click="nameClick(p)"
            v-bind:class="[p.Classes, p.CanReceiveVotes ? 'Ok' : 'NoVotes', p.inPool ? 'inPool' : 'notInPool']"></li>
      </ul>
    </div>
    <div v-bind:class="[movingInPool ? 'moving' : '']">
      <h2>Pool</h2>
      <p>Top {{numToElect}} will be put on your ballot.</p>
      <p>Sort this list using your mouse. To use a keyboard, press Tab to focus and Enter to select then Up and Down to move.</p>
        <draggable id="pool" v-model="pool" v-on:end="savePool">
          <div v-for="(p, i) in pool" 
               :key="p.id" 
               tabindex="0"
               v-on:keydown="keydown(p, i, $event)"
               v-bind:ref="'p' + p.Id"
               v-bind:class="[i < lastInTop ? 'inTop' : i === lastInTop ? 'inTop lastInTop' : 'inOther', p.moving ? 'moving' : '' ]">
            <div v-html="p.Name"></div>
            <span class="removeFromPool" v-on:click="removeFromPool(p)">x</span>
          </div>
        </draggable>
    </div>
  </div>
  <div>
    Lock in?
  </div>
</div>