@model SetupModel
@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@{
  ViewBag.Title = "Election Setup";
  ViewBag.Message = "Who, What, When and Where!";
  ViewData["ExtraScripts"] = new[] {
ClientFile("~/Scripts/vue{0}.js", ".min"),
ClientFile("~/Scripts/BadiDateToday.v1.js")
};

  ContextItems.AddJavascriptForPage("setupIndexPage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("setupIndexPage.Election={0};".FilledWith(Model.CurrentElection.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("setupIndexPage.Locations={0};".FilledWith(Model.LocationsJson));
  ContextItems.AddJavascriptForPage("setupIndexPage.Tellers={0};".FilledWith(Model.TellersJson));
  ContextItems.AddJavascriptForPage("setupIndexPage.initialRules('{type}','{mode}',{rules});".FilledWith(Model.RulesForCurrentElection));
  ContextItems.AddJavascriptForPage("setupIndexPage.hasBallots={0};".FilledWith(Model.HasBallots.SerializedAsJsonString()));
}
<button type="button" class="btnSave btn" accesskey="S">
  <u>S</u>ave Changes
</button>

<div id="setupBody">
  <h2>
    Step 1 <span>Define the Election</span>
  </h2>
  <div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
  <div class="PullInstructions">
    <ol>
      <li>
        Carefully define the core settings here (in grey). These will be locked down once ballots are entered into the system.
      </li>
      <li>
        The election date is optional, but for Local Spiritual Assembly elections, this will help to confirm that the election
        is being held on the 13<sup>th</sup> day of the month of Glory.
      </li>
    </ol>
  </div>
  <table class="Demographics">
    <tr class="electionDetail T">
      <th>
        Type of Election<span class="ui-icon ui-icon-info" id="qTipType"></span>
      </th>
      <td>
        <select id="ddlType" data-name="ElectionType">
          @ElectionTypeEnum.ForHtmlSelect()
        </select>
        <span class="ui-icon ui-icon-info" id="qTipLocked1"></span>
        <span class="ui-state-error-text"><span class="ui-icon ui-icon-info" id="qTipLocked2"></span></span>
      </td>
    </tr>
    <tr class="electionDetail">
      <th>
        Variation<span class="ui-icon ui-icon-info" id="qTipVariation"></span>
      </th>
      <td>
        <select id="ddlMode" data-name="ElectionMode">
          @ElectionModeEnum.ForHtmlSelect("", new Dictionary<string, string>
                                                                                                                                                                      {
                                                                                                                                                                        {"B"," id=modeB"}
                                                                                                                                                                      })
          @*                <option value="N">Normal Election</option>
            <option value="T">Tie-Break</option>
            <option value="B" id="modeB">By-election</option>
          *@
        </select>
        <span id="VariationNotice">
          Special Notes:
          <span class="ui-icon ui-icon-info" id="qTipNoteN"></span>
          <span class="ui-icon ui-icon-info" id="qTipNoteT"></span>
          <span class="ui-icon ui-icon-info" id="qTipNoteB"></span>
        </span>
      </td>
    </tr>
    <tr class="electionDetail">
      <th>
        Spaces on Ballot<span class="ui-icon ui-icon-info" id="qTipNum"></span>
      </th>
      <td>
        <input type="number" min="1" id="txtNames" data-name="NumberToElect" />
      </td>
    </tr>
    <tr class="electionDetail">
      <th>
        Who can vote?<span class="ui-icon ui-icon-info" id="qTipCanVote"></span>
      </th>
      <td>
        <select id="ddlCanVote" data-name="CanVote">
          <option value="A">Everyone on the list</option>
          <option value="N">Named delegates</option>
        </select>
      </td>
    </tr>
    <tr class="electionDetail B">
      <th>
        Who can be voted for?<span class="ui-icon ui-icon-info" id="qTipCanReceive"></span>
      </th>
      <td>
        <select id="ddlCanReceive" data-name="CanReceive">
          <option value="A">Everyone on the list</option>
          <option value="N">Named individuals</option>
        </select>
        <button type="button" id="btnResetList" class="btn btn-mini">Reset All People<span class="ui-icon ui-icon-info" id="qTipReset"></span></button>
      </td>
    </tr>
    <tr>
      <th>
        Report on next highest<span class="ui-icon ui-icon-info" id="qTipNumNext"></span>
      </th>
      <td>
        <input type="number" min="0" id="txtExtras" data-name="NumberExtra" />
      </td>
    </tr>
    <tr>
      <th>
        Convener<span class="ui-icon ui-icon-info" id="qTipConvener"></span>
      </th>
      <td>
        <input type="text" id="txtConvener" data-name="Convenor">
      </td>
    </tr>
    <tr>
      <th>
        Election Date<span class="ui-icon ui-icon-info" id="qTipDate"></span>
      </th>
      <td>
        <input type="text" id="txtDate" data-name="DateOfElection" placeholder="yyyy-mm-dd">
        <span id="txtDateTip">(yyyy-mm-dd)</span>
        <div class="badiDate">
          <div id="badiDateIntro"></div>
          <div id="badiDateBefore" class="badiDateName"></div>
          <div id="badiDateAfter" class="badiDateName"></div>
          <div class="showGlory13">Local Spiritual Assembly elections must begin on 13 Glory (Jalál).</div>
        </div>
      </td>
    </tr>
  </table>

  <div class="newStep"></div>
  <h2>
    Step 2 <span>List the election</span>
  </h2>
  <div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
  <div class="PullInstructions">
    <ol>
      <li>Provide a name for this election that you will use and see in your list of elections.</li>
      <li>If you allow other tellers access, they will see the name and it will be listed on the TallyJ welcome page while you are active in it.</li>
      <li>Typically the name should include your locality and the election type. For example, New York Ridvan 2018</li>
    </ol>
  </div>

  <table class="Demographics">
    <tr>
      <th>
        Name in TallyJ<span class="ui-icon ui-icon-info" id="qTipName"></span>
      </th>
      <td colspan="2">
        <input type="text" id="txtName" data-name="Name">
      </td>
    </tr>
    <tr>
      <th>
        Just Testing?<span class="ui-icon ui-icon-info" id="qTipTest"></span>
      </th>
      <td>
        <yes-no v-model="election.ShowAsTest"></yes-no>
      </td>
      <td>
        Show this as a Test election in my list of elections.
      </td>
    </tr>

    <tr>
      <th>
        Show on Home Page?<span class="ui-icon ui-icon-info" id="qTipShow"></span>
      </th>
      <td>
        <yes-no v-model="election.ListForPublic"></yes-no>
      </td>
      <td>
        Required to allow other tellers to connect.
      </td>
    </tr>
    <tr v-if="election.ListForPublic">
      <th>
        Access Code<span class="ui-icon ui-icon-info" id="qTipAccess"></span>
      </th>
      <td colspan="2">
        <input type="text" data-name="ElectionPasscode" maxlength="50" />
      </td>
    </tr>
  </table>


  <div class="newStep"></div>

  <h2>
    Step 3 <span>Configure Features</span>
  </h2>
  <div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
  <div class="PullInstructions">
    <ol>
      <li>TallyJ has a number of features that you may or may not want to use.</li>
      <li>If you are only using TallyJ to process ballots, </li>
    </ol>
  </div>

  <table class="Demographics">
    <tr>
      <th>
        Multiple locations?<span class="ui-icon ui-icon-info" id="qTipLocation"></span>
      </th>
      <td>
        <yes-no code="useGatheringBallots" v-model="MultipleLocations"></yes-no>
      </td>
      <td>
        Are tellers working together in different locations/venues/polling stations on this election?
      </td>
    </tr>
    <tr>
      <th></th>
      <td colspan="2">
        <div class="locations" v-if="MultipleLocations">
            <div id="locationList">
              <div v-for="(loc, i) in locations">
                <input :data-id="loc.C_RowId" type=text v-model="loc.Name">
                <span class="ui-icon ui-icon-arrow-2-n-s" title="Drag to sort"></span>
                <span class="ui-icon ui-icon-trash" title="Delete this location" v-on:click="removeLocation(i)"></span>
              </div>
            </div>
            <button type="button" id="btnAddLocation" class="btn btn-small">
              Add a Location
            </button>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        Use "Gathering Ballots" Pages?<span class="ui-icon ui-icon-info" id="qTipPreBallot"></span>
      </th>
      <td>
        <yes-no v-model="usingBallotProcess"></yes-no>
      </td>
      <td>
        Use TallyJ to register voters and/or collect ballots from them?
      </td>
    </tr>
    <tr v-if="usingBallotProcess">
      <th>
        Show "Called In"?@*<span class="ui-icon ui-icon-info" id="qTipShowCalled"></span>*@
      </th>
      <td>
        <yes-no v-model="election.UseCallInButton"></yes-no>
      </td>
      <td>
        Show "Called In" button on Front Desk?
      </td>
    </tr>
    <tr v-if="usingBallotProcess">
      <th>
        Process for gathering ballots
      </th>
      <td colspan="2">
        <table>
          <tr>
            <td>
              <input type="radio" value="RC" v-model="election.BallotProcess" name="rollCall" id="process1" />
            </td>
            <td>
              <label for="process1">
                <strong>Register</strong> voters as they arrive.
                <br>Use the <strong>Roll Call</strong> screen and have people publicly deposit their ballots.
              </label>
            </td>
          </tr>
          <tr>
            <td>
              <input type="radio" value="Reg" v-model="election.BallotProcess" name="rollCall" id="process2" />
            </td>
            <td>
              <label for="process2">
                <strong>Preregister</strong> voters as they arrive.
                <br>Receive ballots at <strong>tellers' stations</strong>.
              </label>
            </td>
          </tr>
          <tr>
            <td>
              <input type="radio" value="NoReg" v-model="election.BallotProcess" name="rollCall" id="process3" />
            </td>
            <td>
              <label for="process3">
                <strong>No registration</strong> of voters as they arrive.
                <br>Receive ballots at <strong>tellers' stations</strong>, registering them at that time.
              </label>
            </td>
          </tr>
        </table>
      </td>
    </tr>

  </table>

  <div class="newStep"></div>
  <h2>Other Information</h2>
  <table class="Demographics">
    <tr>
      <th>
        Teller Names<span class="ui-icon ui-icon-info" id="qTipTellers"></span>
      </th>
      <td>
        <div id="tellersList">
          <i>(Filled by tellers as needed)</i>
        </div>
      </td>
    </tr>
  </table>

  <div class="More">
    <p class="techInfo" title="Technical information">
      Internal code: <span data-name="ElectionGuid"></span>
    </p>
  </div>
</div>


<script type="text/x-template" id="yes-no">
  <span class="YN">
    <label>
      <input type="radio" value="Y" v-model="yesNo">
      Yes
    </label>
    <label>
      <input type="radio" value="N" v-model="yesNo">
      No
    </label>
  </span>
</script>

<script type="text/x-template" id="locationTemplate">
</script>